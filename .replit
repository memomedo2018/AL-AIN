
run = ["sh", "-c", "npm start"]

modules = ["nodejs-20", "web"]

[nix]
channel = "stable-24_05"

[deployment]
run = ["sh", "-c", "npm start"]
build = ["sh", "-c", "npm run build"]

[workflows]
runButton = "Development Server"

[[workflows.workflow]]
name = "Development Server"
author = 44503392
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Setup Project"
author = 44503392
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[ports]]
localPort = 3000
externalPort = 80

[env]
NODE_ENV = "development"
PORT = "3000"

[gitHubImport]
requiredFiles = [".replit", "replit.nix"]

[languages]

[languages.javascript]
pattern = "**/{*.js,*.jsx,*.ts,*.tsx,*.mjs}"

[languages.javascript.languageServer]
start = "typescript-language-server --stdio"

[packager]
language = "nodejs"

[packager.features]
enabledForHosting = false
packageSearch = true
guessImports = true

[debugger]
support = true

[debugger.interactive]
transport = "localhost:0"
startCommand = ["dap-node"]

[debugger.interactive.initializeMessage]
command = "initialize"
type = "request"

[debugger.interactive.launchMessage]
command = "launch"
type = "request"

[debugger.interactive.launchMessage.arguments]
program = "./app/page.tsx"
console = "externalTerminal"
args = []
stopOnEntry = false
sourceMaps = true
outDir = ".next"
